{
  "version": 3,
  "sources": ["../../qrcode.vue/dist/qrcode.vue.esm.js"],
  "sourcesContent": ["/*!\n * qrcode.vue v3.3.3\n * A Vue.js component to generate QRCode.\n * \u00A9 2017-2021 @scopewu(https://github.com/scopewu)\n * MIT License.\n */\nimport { defineComponent, ref, onUpdated, h, onMounted } from 'vue';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar mode$1 = {\n\tMODE_NUMBER :\t\t1 << 0,\n\tMODE_ALPHA_NUM : \t1 << 1,\n\tMODE_8BIT_BYTE : \t1 << 2,\n\tMODE_KANJI :\t\t1 << 3\n};\n\nvar mode = mode$1;\n\nfunction QR8bitByte(data) {\n\tthis.mode = mode.MODE_8BIT_BYTE;\n\tthis.data = data;\n}\n\nQR8bitByte.prototype = {\n\n\tgetLength : function(buffer) {\n\t\treturn this.data.length;\n\t},\n\t\n\twrite : function(buffer) {\n\t\tfor (var i = 0; i < this.data.length; i++) {\n\t\t\t// not JIS ...\n\t\t\tbuffer.put(this.data.charCodeAt(i), 8);\n\t\t}\n\t}\n};\n\nvar _8BitByte = QR8bitByte;\n\nvar ErrorCorrectLevel = {\n\tL : 1,\n\tM : 0,\n\tQ : 3,\n\tH : 2\n};\n\n// ErrorCorrectLevel\nvar ECL = ErrorCorrectLevel;\n\nfunction QRRSBlock(totalCount, dataCount) {\n\tthis.totalCount = totalCount;\n\tthis.dataCount  = dataCount;\n}\n\nQRRSBlock.RS_BLOCK_TABLE = [\n\n\t// L\n\t// M\n\t// Q\n\t// H\n\n\t// 1\n\t[1, 26, 19],\n\t[1, 26, 16],\n\t[1, 26, 13],\n\t[1, 26, 9],\n\t\n\t// 2\n\t[1, 44, 34],\n\t[1, 44, 28],\n\t[1, 44, 22],\n\t[1, 44, 16],\n\n\t// 3\n\t[1, 70, 55],\n\t[1, 70, 44],\n\t[2, 35, 17],\n\t[2, 35, 13],\n\n\t// 4\t\t\n\t[1, 100, 80],\n\t[2, 50, 32],\n\t[2, 50, 24],\n\t[4, 25, 9],\n\t\n\t// 5\n\t[1, 134, 108],\n\t[2, 67, 43],\n\t[2, 33, 15, 2, 34, 16],\n\t[2, 33, 11, 2, 34, 12],\n\t\n\t// 6\n\t[2, 86, 68],\n\t[4, 43, 27],\n\t[4, 43, 19],\n\t[4, 43, 15],\n\t\n\t// 7\t\t\n\t[2, 98, 78],\n\t[4, 49, 31],\n\t[2, 32, 14, 4, 33, 15],\n\t[4, 39, 13, 1, 40, 14],\n\t\n\t// 8\n\t[2, 121, 97],\n\t[2, 60, 38, 2, 61, 39],\n\t[4, 40, 18, 2, 41, 19],\n\t[4, 40, 14, 2, 41, 15],\n\t\n\t// 9\n\t[2, 146, 116],\n\t[3, 58, 36, 2, 59, 37],\n\t[4, 36, 16, 4, 37, 17],\n\t[4, 36, 12, 4, 37, 13],\n\t\n\t// 10\t\t\n\t[2, 86, 68, 2, 87, 69],\n\t[4, 69, 43, 1, 70, 44],\n\t[6, 43, 19, 2, 44, 20],\n\t[6, 43, 15, 2, 44, 16],\n\n\t// 11\n\t[4, 101, 81],\n\t[1, 80, 50, 4, 81, 51],\n\t[4, 50, 22, 4, 51, 23],\n\t[3, 36, 12, 8, 37, 13],\n\n\t// 12\n\t[2, 116, 92, 2, 117, 93],\n\t[6, 58, 36, 2, 59, 37],\n\t[4, 46, 20, 6, 47, 21],\n\t[7, 42, 14, 4, 43, 15],\n\n\t// 13\n\t[4, 133, 107],\n\t[8, 59, 37, 1, 60, 38],\n\t[8, 44, 20, 4, 45, 21],\n\t[12, 33, 11, 4, 34, 12],\n\n\t// 14\n\t[3, 145, 115, 1, 146, 116],\n\t[4, 64, 40, 5, 65, 41],\n\t[11, 36, 16, 5, 37, 17],\n\t[11, 36, 12, 5, 37, 13],\n\n\t// 15\n\t[5, 109, 87, 1, 110, 88],\n\t[5, 65, 41, 5, 66, 42],\n\t[5, 54, 24, 7, 55, 25],\n\t[11, 36, 12],\n\n\t// 16\n\t[5, 122, 98, 1, 123, 99],\n\t[7, 73, 45, 3, 74, 46],\n\t[15, 43, 19, 2, 44, 20],\n\t[3, 45, 15, 13, 46, 16],\n\n\t// 17\n\t[1, 135, 107, 5, 136, 108],\n\t[10, 74, 46, 1, 75, 47],\n\t[1, 50, 22, 15, 51, 23],\n\t[2, 42, 14, 17, 43, 15],\n\n\t// 18\n\t[5, 150, 120, 1, 151, 121],\n\t[9, 69, 43, 4, 70, 44],\n\t[17, 50, 22, 1, 51, 23],\n\t[2, 42, 14, 19, 43, 15],\n\n\t// 19\n\t[3, 141, 113, 4, 142, 114],\n\t[3, 70, 44, 11, 71, 45],\n\t[17, 47, 21, 4, 48, 22],\n\t[9, 39, 13, 16, 40, 14],\n\n\t// 20\n\t[3, 135, 107, 5, 136, 108],\n\t[3, 67, 41, 13, 68, 42],\n\t[15, 54, 24, 5, 55, 25],\n\t[15, 43, 15, 10, 44, 16],\n\n\t// 21\n\t[4, 144, 116, 4, 145, 117],\n\t[17, 68, 42],\n\t[17, 50, 22, 6, 51, 23],\n\t[19, 46, 16, 6, 47, 17],\n\n\t// 22\n\t[2, 139, 111, 7, 140, 112],\n\t[17, 74, 46],\n\t[7, 54, 24, 16, 55, 25],\n\t[34, 37, 13],\n\n\t// 23\n\t[4, 151, 121, 5, 152, 122],\n\t[4, 75, 47, 14, 76, 48],\n\t[11, 54, 24, 14, 55, 25],\n\t[16, 45, 15, 14, 46, 16],\n\n\t// 24\n\t[6, 147, 117, 4, 148, 118],\n\t[6, 73, 45, 14, 74, 46],\n\t[11, 54, 24, 16, 55, 25],\n\t[30, 46, 16, 2, 47, 17],\n\n\t// 25\n\t[8, 132, 106, 4, 133, 107],\n\t[8, 75, 47, 13, 76, 48],\n\t[7, 54, 24, 22, 55, 25],\n\t[22, 45, 15, 13, 46, 16],\n\n\t// 26\n\t[10, 142, 114, 2, 143, 115],\n\t[19, 74, 46, 4, 75, 47],\n\t[28, 50, 22, 6, 51, 23],\n\t[33, 46, 16, 4, 47, 17],\n\n\t// 27\n\t[8, 152, 122, 4, 153, 123],\n\t[22, 73, 45, 3, 74, 46],\n\t[8, 53, 23, 26, 54, 24],\n\t[12, 45, 15, 28, 46, 16],\n\n\t// 28\n\t[3, 147, 117, 10, 148, 118],\n\t[3, 73, 45, 23, 74, 46],\n\t[4, 54, 24, 31, 55, 25],\n\t[11, 45, 15, 31, 46, 16],\n\n\t// 29\n\t[7, 146, 116, 7, 147, 117],\n\t[21, 73, 45, 7, 74, 46],\n\t[1, 53, 23, 37, 54, 24],\n\t[19, 45, 15, 26, 46, 16],\n\n\t// 30\n\t[5, 145, 115, 10, 146, 116],\n\t[19, 75, 47, 10, 76, 48],\n\t[15, 54, 24, 25, 55, 25],\n\t[23, 45, 15, 25, 46, 16],\n\n\t// 31\n\t[13, 145, 115, 3, 146, 116],\n\t[2, 74, 46, 29, 75, 47],\n\t[42, 54, 24, 1, 55, 25],\n\t[23, 45, 15, 28, 46, 16],\n\n\t// 32\n\t[17, 145, 115],\n\t[10, 74, 46, 23, 75, 47],\n\t[10, 54, 24, 35, 55, 25],\n\t[19, 45, 15, 35, 46, 16],\n\n\t// 33\n\t[17, 145, 115, 1, 146, 116],\n\t[14, 74, 46, 21, 75, 47],\n\t[29, 54, 24, 19, 55, 25],\n\t[11, 45, 15, 46, 46, 16],\n\n\t// 34\n\t[13, 145, 115, 6, 146, 116],\n\t[14, 74, 46, 23, 75, 47],\n\t[44, 54, 24, 7, 55, 25],\n\t[59, 46, 16, 1, 47, 17],\n\n\t// 35\n\t[12, 151, 121, 7, 152, 122],\n\t[12, 75, 47, 26, 76, 48],\n\t[39, 54, 24, 14, 55, 25],\n\t[22, 45, 15, 41, 46, 16],\n\n\t// 36\n\t[6, 151, 121, 14, 152, 122],\n\t[6, 75, 47, 34, 76, 48],\n\t[46, 54, 24, 10, 55, 25],\n\t[2, 45, 15, 64, 46, 16],\n\n\t// 37\n\t[17, 152, 122, 4, 153, 123],\n\t[29, 74, 46, 14, 75, 47],\n\t[49, 54, 24, 10, 55, 25],\n\t[24, 45, 15, 46, 46, 16],\n\n\t// 38\n\t[4, 152, 122, 18, 153, 123],\n\t[13, 74, 46, 32, 75, 47],\n\t[48, 54, 24, 14, 55, 25],\n\t[42, 45, 15, 32, 46, 16],\n\n\t// 39\n\t[20, 147, 117, 4, 148, 118],\n\t[40, 75, 47, 7, 76, 48],\n\t[43, 54, 24, 22, 55, 25],\n\t[10, 45, 15, 67, 46, 16],\n\n\t// 40\n\t[19, 148, 118, 6, 149, 119],\n\t[18, 75, 47, 31, 76, 48],\n\t[34, 54, 24, 34, 55, 25],\n\t[20, 45, 15, 61, 46, 16]\n];\n\nQRRSBlock.getRSBlocks = function(typeNumber, errorCorrectLevel) {\n\t\n\tvar rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\n\t\n\tif (rsBlock == undefined) {\n\t\tthrow new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);\n\t}\n\n\tvar length = rsBlock.length / 3;\n\t\n\tvar list = new Array();\n\t\n\tfor (var i = 0; i < length; i++) {\n\n\t\tvar count = rsBlock[i * 3 + 0];\n\t\tvar totalCount = rsBlock[i * 3 + 1];\n\t\tvar dataCount  = rsBlock[i * 3 + 2];\n\n\t\tfor (var j = 0; j < count; j++) {\n\t\t\tlist.push(new QRRSBlock(totalCount, dataCount) );\t\n\t\t}\n\t}\n\t\n\treturn list;\n};\n\nQRRSBlock.getRsBlockTable = function(typeNumber, errorCorrectLevel) {\n\n\tswitch(errorCorrectLevel) {\n\tcase ECL.L :\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n\tcase ECL.M :\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n\tcase ECL.Q :\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n\tcase ECL.H :\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n\tdefault :\n\t\treturn undefined;\n\t}\n};\n\nvar RSBlock$1 = QRRSBlock;\n\nfunction QRBitBuffer() {\n\tthis.buffer = new Array();\n\tthis.length = 0;\n}\n\nQRBitBuffer.prototype = {\n\n\tget : function(index) {\n\t\tvar bufIndex = Math.floor(index / 8);\n\t\treturn ( (this.buffer[bufIndex] >>> (7 - index % 8) ) & 1) == 1;\n\t},\n\t\n\tput : function(num, length) {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tthis.putBit( ( (num >>> (length - i - 1) ) & 1) == 1);\n\t\t}\n\t},\n\t\n\tgetLengthInBits : function() {\n\t\treturn this.length;\n\t},\n\t\n\tputBit : function(bit) {\n\t\n\t\tvar bufIndex = Math.floor(this.length / 8);\n\t\tif (this.buffer.length <= bufIndex) {\n\t\t\tthis.buffer.push(0);\n\t\t}\n\t\n\t\tif (bit) {\n\t\t\tthis.buffer[bufIndex] |= (0x80 >>> (this.length % 8) );\n\t\t}\n\t\n\t\tthis.length++;\n\t}\n};\n\nvar BitBuffer$1 = QRBitBuffer;\n\nvar QRMath = {\n\n\tglog : function(n) {\n\t\n\t\tif (n < 1) {\n\t\t\tthrow new Error(\"glog(\" + n + \")\");\n\t\t}\n\t\t\n\t\treturn QRMath.LOG_TABLE[n];\n\t},\n\t\n\tgexp : function(n) {\n\t\n\t\twhile (n < 0) {\n\t\t\tn += 255;\n\t\t}\n\t\n\t\twhile (n >= 256) {\n\t\t\tn -= 255;\n\t\t}\n\t\n\t\treturn QRMath.EXP_TABLE[n];\n\t},\n\t\n\tEXP_TABLE : new Array(256),\n\t\n\tLOG_TABLE : new Array(256)\n\n};\n\t\nfor (var i = 0; i < 8; i++) {\n\tQRMath.EXP_TABLE[i] = 1 << i;\n}\nfor (var i = 8; i < 256; i++) {\n\tQRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4]\n\t\t^ QRMath.EXP_TABLE[i - 5]\n\t\t^ QRMath.EXP_TABLE[i - 6]\n\t\t^ QRMath.EXP_TABLE[i - 8];\n}\nfor (var i = 0; i < 255; i++) {\n\tQRMath.LOG_TABLE[QRMath.EXP_TABLE[i] ] = i;\n}\n\nvar math$2 = QRMath;\n\nvar math$1 = math$2;\n\nfunction QRPolynomial(num, shift) {\n\n\tif (num.length == undefined) {\n\t\tthrow new Error(num.length + \"/\" + shift);\n\t}\n\n\tvar offset = 0;\n\n\twhile (offset < num.length && num[offset] == 0) {\n\t\toffset++;\n\t}\n\n\tthis.num = new Array(num.length - offset + shift);\n\tfor (var i = 0; i < num.length - offset; i++) {\n\t\tthis.num[i] = num[i + offset];\n\t}\n}\n\nQRPolynomial.prototype = {\n\n\tget : function(index) {\n\t\treturn this.num[index];\n\t},\n\t\n\tgetLength : function() {\n\t\treturn this.num.length;\n\t},\n\t\n\tmultiply : function(e) {\n\t\n\t\tvar num = new Array(this.getLength() + e.getLength() - 1);\n\t\n\t\tfor (var i = 0; i < this.getLength(); i++) {\n\t\t\tfor (var j = 0; j < e.getLength(); j++) {\n\t\t\t\tnum[i + j] ^= math$1.gexp(math$1.glog(this.get(i) ) + math$1.glog(e.get(j) ) );\n\t\t\t}\n\t\t}\n\t\n\t\treturn new QRPolynomial(num, 0);\n\t},\n\t\n\tmod : function(e) {\n\t\n\t\tif (this.getLength() - e.getLength() < 0) {\n\t\t\treturn this;\n\t\t}\n\t\n\t\tvar ratio = math$1.glog(this.get(0) ) - math$1.glog(e.get(0) );\n\t\n\t\tvar num = new Array(this.getLength() );\n\t\t\n\t\tfor (var i = 0; i < this.getLength(); i++) {\n\t\t\tnum[i] = this.get(i);\n\t\t}\n\t\t\n\t\tfor (var i = 0; i < e.getLength(); i++) {\n\t\t\tnum[i] ^= math$1.gexp(math$1.glog(e.get(i) ) + ratio);\n\t\t}\n\t\n\t\t// recursive call\n\t\treturn new QRPolynomial(num, 0).mod(e);\n\t}\n};\n\nvar Polynomial$2 = QRPolynomial;\n\nvar Mode = mode$1;\nvar Polynomial$1 = Polynomial$2;\nvar math = math$2;\n\nvar QRMaskPattern = {\n\tPATTERN000 : 0,\n\tPATTERN001 : 1,\n\tPATTERN010 : 2,\n\tPATTERN011 : 3,\n\tPATTERN100 : 4,\n\tPATTERN101 : 5,\n\tPATTERN110 : 6,\n\tPATTERN111 : 7\n};\n\nvar QRUtil = {\n\n    PATTERN_POSITION_TABLE : [\n\t    [],\n\t    [6, 18],\n\t    [6, 22],\n\t    [6, 26],\n\t    [6, 30],\n\t    [6, 34],\n\t    [6, 22, 38],\n\t    [6, 24, 42],\n\t    [6, 26, 46],\n\t    [6, 28, 50],\n\t    [6, 30, 54],\t\t\n\t    [6, 32, 58],\n\t    [6, 34, 62],\n\t    [6, 26, 46, 66],\n\t    [6, 26, 48, 70],\n\t    [6, 26, 50, 74],\n\t    [6, 30, 54, 78],\n\t    [6, 30, 56, 82],\n\t    [6, 30, 58, 86],\n\t    [6, 34, 62, 90],\n\t    [6, 28, 50, 72, 94],\n\t    [6, 26, 50, 74, 98],\n\t    [6, 30, 54, 78, 102],\n\t    [6, 28, 54, 80, 106],\n\t    [6, 32, 58, 84, 110],\n\t    [6, 30, 58, 86, 114],\n\t    [6, 34, 62, 90, 118],\n\t    [6, 26, 50, 74, 98, 122],\n\t    [6, 30, 54, 78, 102, 126],\n\t    [6, 26, 52, 78, 104, 130],\n\t    [6, 30, 56, 82, 108, 134],\n\t    [6, 34, 60, 86, 112, 138],\n\t    [6, 30, 58, 86, 114, 142],\n\t    [6, 34, 62, 90, 118, 146],\n\t    [6, 30, 54, 78, 102, 126, 150],\n\t    [6, 24, 50, 76, 102, 128, 154],\n\t    [6, 28, 54, 80, 106, 132, 158],\n\t    [6, 32, 58, 84, 110, 136, 162],\n\t    [6, 26, 54, 82, 110, 138, 166],\n\t    [6, 30, 58, 86, 114, 142, 170]\n    ],\n\n    G15 : (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0),\n    G18 : (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0),\n    G15_MASK : (1 << 14) | (1 << 12) | (1 << 10)\t| (1 << 4) | (1 << 1),\n\n    getBCHTypeInfo : function(data) {\n\t    var d = data << 10;\n\t    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n\t\t    d ^= (QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) ) ); \t\n\t    }\n\t    return ( (data << 10) | d) ^ QRUtil.G15_MASK;\n    },\n\n    getBCHTypeNumber : function(data) {\n\t    var d = data << 12;\n\t    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n\t\t    d ^= (QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) ) ); \t\n\t    }\n\t    return (data << 12) | d;\n    },\n\n    getBCHDigit : function(data) {\n\n\t    var digit = 0;\n\n\t    while (data != 0) {\n\t\t    digit++;\n\t\t    data >>>= 1;\n\t    }\n\n\t    return digit;\n    },\n\n    getPatternPosition : function(typeNumber) {\n\t    return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n    },\n\n    getMask : function(maskPattern, i, j) {\n\t    \n\t    switch (maskPattern) {\n\t\t    \n\t    case QRMaskPattern.PATTERN000 : return (i + j) % 2 == 0;\n\t    case QRMaskPattern.PATTERN001 : return i % 2 == 0;\n\t    case QRMaskPattern.PATTERN010 : return j % 3 == 0;\n\t    case QRMaskPattern.PATTERN011 : return (i + j) % 3 == 0;\n\t    case QRMaskPattern.PATTERN100 : return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0;\n\t    case QRMaskPattern.PATTERN101 : return (i * j) % 2 + (i * j) % 3 == 0;\n\t    case QRMaskPattern.PATTERN110 : return ( (i * j) % 2 + (i * j) % 3) % 2 == 0;\n\t    case QRMaskPattern.PATTERN111 : return ( (i * j) % 3 + (i + j) % 2) % 2 == 0;\n\n\t    default :\n\t\t    throw new Error(\"bad maskPattern:\" + maskPattern);\n\t    }\n    },\n\n    getErrorCorrectPolynomial : function(errorCorrectLength) {\n\n\t    var a = new Polynomial$1([1], 0);\n\n\t    for (var i = 0; i < errorCorrectLength; i++) {\n\t\t    a = a.multiply(new Polynomial$1([1, math.gexp(i)], 0) );\n\t    }\n\n\t    return a;\n    },\n\n    getLengthInBits : function(mode, type) {\n\n\t    if (1 <= type && type < 10) {\n\n\t\t    // 1 - 9\n\n\t\t    switch(mode) {\n\t\t    case Mode.MODE_NUMBER \t: return 10;\n\t\t    case Mode.MODE_ALPHA_NUM \t: return 9;\n\t\t    case Mode.MODE_8BIT_BYTE\t: return 8;\n\t\t    case Mode.MODE_KANJI  \t: return 8;\n\t\t    default :\n\t\t\t    throw new Error(\"mode:\" + mode);\n\t\t    }\n\n\t    } else if (type < 27) {\n\n\t\t    // 10 - 26\n\n\t\t    switch(mode) {\n\t\t    case Mode.MODE_NUMBER \t: return 12;\n\t\t    case Mode.MODE_ALPHA_NUM \t: return 11;\n\t\t    case Mode.MODE_8BIT_BYTE\t: return 16;\n\t\t    case Mode.MODE_KANJI  \t: return 10;\n\t\t    default :\n\t\t\t    throw new Error(\"mode:\" + mode);\n\t\t    }\n\n\t    } else if (type < 41) {\n\n\t\t    // 27 - 40\n\n\t\t    switch(mode) {\n\t\t    case Mode.MODE_NUMBER \t: return 14;\n\t\t    case Mode.MODE_ALPHA_NUM\t: return 13;\n\t\t    case Mode.MODE_8BIT_BYTE\t: return 16;\n\t\t    case Mode.MODE_KANJI  \t: return 12;\n\t\t    default :\n\t\t\t    throw new Error(\"mode:\" + mode);\n\t\t    }\n\n\t    } else {\n\t\t    throw new Error(\"type:\" + type);\n\t    }\n    },\n\n    getLostPoint : function(qrCode) {\n\t    \n\t    var moduleCount = qrCode.getModuleCount();\n\t    \n\t    var lostPoint = 0;\n\t    \n\t    // LEVEL1\n\t    \n\t    for (var row = 0; row < moduleCount; row++) {\n\n\t\t    for (var col = 0; col < moduleCount; col++) {\n\n\t\t\t    var sameCount = 0;\n\t\t\t    var dark = qrCode.isDark(row, col);\n\n\t\t\t\tfor (var r = -1; r <= 1; r++) {\n\n\t\t\t\t    if (row + r < 0 || moduleCount <= row + r) {\n\t\t\t\t\t    continue;\n\t\t\t\t    }\n\n\t\t\t\t    for (var c = -1; c <= 1; c++) {\n\n\t\t\t\t\t    if (col + c < 0 || moduleCount <= col + c) {\n\t\t\t\t\t\t    continue;\n\t\t\t\t\t    }\n\n\t\t\t\t\t    if (r == 0 && c == 0) {\n\t\t\t\t\t\t    continue;\n\t\t\t\t\t    }\n\n\t\t\t\t\t    if (dark == qrCode.isDark(row + r, col + c) ) {\n\t\t\t\t\t\t    sameCount++;\n\t\t\t\t\t    }\n\t\t\t\t    }\n\t\t\t    }\n\n\t\t\t    if (sameCount > 5) {\n\t\t\t\t    lostPoint += (3 + sameCount - 5);\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    // LEVEL2\n\n\t    for (var row = 0; row < moduleCount - 1; row++) {\n\t\t    for (var col = 0; col < moduleCount - 1; col++) {\n\t\t\t    var count = 0;\n\t\t\t    if (qrCode.isDark(row,     col    ) ) count++;\n\t\t\t    if (qrCode.isDark(row + 1, col    ) ) count++;\n\t\t\t    if (qrCode.isDark(row,     col + 1) ) count++;\n\t\t\t    if (qrCode.isDark(row + 1, col + 1) ) count++;\n\t\t\t    if (count == 0 || count == 4) {\n\t\t\t\t    lostPoint += 3;\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    // LEVEL3\n\n\t    for (var row = 0; row < moduleCount; row++) {\n\t\t    for (var col = 0; col < moduleCount - 6; col++) {\n\t\t\t    if (qrCode.isDark(row, col)\n\t\t\t\t\t    && !qrCode.isDark(row, col + 1)\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 2)\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 3)\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 4)\n\t\t\t\t\t    && !qrCode.isDark(row, col + 5)\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 6) ) {\n\t\t\t\t    lostPoint += 40;\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    for (var col = 0; col < moduleCount; col++) {\n\t\t    for (var row = 0; row < moduleCount - 6; row++) {\n\t\t\t    if (qrCode.isDark(row, col)\n\t\t\t\t\t    && !qrCode.isDark(row + 1, col)\n\t\t\t\t\t    &&  qrCode.isDark(row + 2, col)\n\t\t\t\t\t    &&  qrCode.isDark(row + 3, col)\n\t\t\t\t\t    &&  qrCode.isDark(row + 4, col)\n\t\t\t\t\t    && !qrCode.isDark(row + 5, col)\n\t\t\t\t\t    &&  qrCode.isDark(row + 6, col) ) {\n\t\t\t\t    lostPoint += 40;\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    // LEVEL4\n\t    \n\t    var darkCount = 0;\n\n\t    for (var col = 0; col < moduleCount; col++) {\n\t\t    for (var row = 0; row < moduleCount; row++) {\n\t\t\t    if (qrCode.isDark(row, col) ) {\n\t\t\t\t    darkCount++;\n\t\t\t    }\n\t\t    }\n\t    }\n\t    \n\t    var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n\t    lostPoint += ratio * 10;\n\n\t    return lostPoint;\t\t\n    }\n};\n\nvar util$1 = QRUtil;\n\nvar BitByte = _8BitByte;\nvar RSBlock = RSBlock$1;\nvar BitBuffer = BitBuffer$1;\nvar util = util$1;\nvar Polynomial = Polynomial$2;\n\nfunction QRCode$1(typeNumber, errorCorrectLevel) {\n\tthis.typeNumber = typeNumber;\n\tthis.errorCorrectLevel = errorCorrectLevel;\n\tthis.modules = null;\n\tthis.moduleCount = 0;\n\tthis.dataCache = null;\n\tthis.dataList = [];\n}\n\n// for client side minification\nvar proto = QRCode$1.prototype;\n\nproto.addData = function(data) {\n\tvar newData = new BitByte(data);\n\tthis.dataList.push(newData);\n\tthis.dataCache = null;\n};\n\nproto.isDark = function(row, col) {\n\tif (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n\t\tthrow new Error(row + \",\" + col);\n\t}\n\treturn this.modules[row][col];\n};\n\nproto.getModuleCount = function() {\n\treturn this.moduleCount;\n};\n\nproto.make = function() {\n\t// Calculate automatically typeNumber if provided is < 1\n\tif (this.typeNumber < 1 ){\n\t\tvar typeNumber = 1;\n\t\tfor (typeNumber = 1; typeNumber < 40; typeNumber++) {\n\t\t\tvar rsBlocks = RSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\n\n\t\t\tvar buffer = new BitBuffer();\n\t\t\tvar totalDataCount = 0;\n\t\t\tfor (var i = 0; i < rsBlocks.length; i++) {\n\t\t\t\ttotalDataCount += rsBlocks[i].dataCount;\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < this.dataList.length; i++) {\n\t\t\t\tvar data = this.dataList[i];\n\t\t\t\tbuffer.put(data.mode, 4);\n\t\t\t\tbuffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber) );\n\t\t\t\tdata.write(buffer);\n\t\t\t}\n\t\t\tif (buffer.getLengthInBits() <= totalDataCount * 8)\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.typeNumber = typeNumber;\n\t}\n\tthis.makeImpl(false, this.getBestMaskPattern() );\n};\n\nproto.makeImpl = function(test, maskPattern) {\n\t\n\tthis.moduleCount = this.typeNumber * 4 + 17;\n\tthis.modules = new Array(this.moduleCount);\n\t\n\tfor (var row = 0; row < this.moduleCount; row++) {\n\t\t\n\t\tthis.modules[row] = new Array(this.moduleCount);\n\t\t\n\t\tfor (var col = 0; col < this.moduleCount; col++) {\n\t\t\tthis.modules[row][col] = null;//(col + row) % 3;\n\t\t}\n\t}\n\n\tthis.setupPositionProbePattern(0, 0);\n\tthis.setupPositionProbePattern(this.moduleCount - 7, 0);\n\tthis.setupPositionProbePattern(0, this.moduleCount - 7);\n\tthis.setupPositionAdjustPattern();\n\tthis.setupTimingPattern();\n\tthis.setupTypeInfo(test, maskPattern);\n\t\n\tif (this.typeNumber >= 7) {\n\t\tthis.setupTypeNumber(test);\n\t}\n\n\tif (this.dataCache == null) {\n\t\tthis.dataCache = QRCode$1.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n\t}\n\n\tthis.mapData(this.dataCache, maskPattern);\n};\n\nproto.setupPositionProbePattern = function(row, col)  {\n\t\n\tfor (var r = -1; r <= 7; r++) {\n\t\t\n\t\tif (row + r <= -1 || this.moduleCount <= row + r) continue;\n\t\t\n\t\tfor (var c = -1; c <= 7; c++) {\n\t\t\t\n\t\t\tif (col + c <= -1 || this.moduleCount <= col + c) continue;\n\t\t\t\n\t\t\tif ( (0 <= r && r <= 6 && (c == 0 || c == 6) )\n\t\t\t\t\t|| (0 <= c && c <= 6 && (r == 0 || r == 6) )\n\t\t\t\t\t|| (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {\n\t\t\t\tthis.modules[row + r][col + c] = true;\n\t\t\t} else {\n\t\t\t\tthis.modules[row + r][col + c] = false;\n\t\t\t}\n\t\t}\t\t\n\t}\t\t\n};\n\nproto.getBestMaskPattern = function() {\n\n\tvar minLostPoint = 0;\n\tvar pattern = 0;\n\n\tfor (var i = 0; i < 8; i++) {\n\t\t\n\t\tthis.makeImpl(true, i);\n\n\t\tvar lostPoint = util.getLostPoint(this);\n\n\t\tif (i == 0 || minLostPoint >  lostPoint) {\n\t\t\tminLostPoint = lostPoint;\n\t\t\tpattern = i;\n\t\t}\n\t}\n\n\treturn pattern;\n};\n\nproto.createMovieClip = function(target_mc, instance_name, depth) {\n\n\tvar qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\n\tvar cs = 1;\n\n\tthis.make();\n\n\tfor (var row = 0; row < this.modules.length; row++) {\n\t\t\n\t\tvar y = row * cs;\n\t\t\n\t\tfor (var col = 0; col < this.modules[row].length; col++) {\n\n\t\t\tvar x = col * cs;\n\t\t\tvar dark = this.modules[row][col];\n\t\t\n\t\t\tif (dark) {\n\t\t\t\tqr_mc.beginFill(0, 100);\n\t\t\t\tqr_mc.moveTo(x, y);\n\t\t\t\tqr_mc.lineTo(x + cs, y);\n\t\t\t\tqr_mc.lineTo(x + cs, y + cs);\n\t\t\t\tqr_mc.lineTo(x, y + cs);\n\t\t\t\tqr_mc.endFill();\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn qr_mc;\n};\n\nproto.setupTimingPattern = function() {\n\t\n\tfor (var r = 8; r < this.moduleCount - 8; r++) {\n\t\tif (this.modules[r][6] != null) {\n\t\t\tcontinue;\n\t\t}\n\t\tthis.modules[r][6] = (r % 2 == 0);\n\t}\n\n\tfor (var c = 8; c < this.moduleCount - 8; c++) {\n\t\tif (this.modules[6][c] != null) {\n\t\t\tcontinue;\n\t\t}\n\t\tthis.modules[6][c] = (c % 2 == 0);\n\t}\n};\n\nproto.setupPositionAdjustPattern = function() {\n\n\tvar pos = util.getPatternPosition(this.typeNumber);\n\t\n\tfor (var i = 0; i < pos.length; i++) {\n\t\n\t\tfor (var j = 0; j < pos.length; j++) {\n\t\t\n\t\t\tvar row = pos[i];\n\t\t\tvar col = pos[j];\n\t\t\t\n\t\t\tif (this.modules[row][col] != null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tfor (var r = -2; r <= 2; r++) {\n\t\t\t\n\t\t\t\tfor (var c = -2; c <= 2; c++) {\n\t\t\t\t\n\t\t\t\t\tif (r == -2 || r == 2 || c == -2 || c == 2\n\t\t\t\t\t\t\t|| (r == 0 && c == 0) ) {\n\t\t\t\t\t\tthis.modules[row + r][col + c] = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.modules[row + r][col + c] = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\nproto.setupTypeNumber = function(test) {\n\n\tvar bits = util.getBCHTypeNumber(this.typeNumber);\n\n\tfor (var i = 0; i < 18; i++) {\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\t\tthis.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\n\t}\n\n\tfor (var i = 0; i < 18; i++) {\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\t\tthis.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n\t}\n};\n\nproto.setupTypeInfo = function(test, maskPattern) {\n\n\tvar data = (this.errorCorrectLevel << 3) | maskPattern;\n\tvar bits = util.getBCHTypeInfo(data);\n\n\t// vertical\t\t\n\tfor (var i = 0; i < 15; i++) {\n\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\n\t\tif (i < 6) {\n\t\t\tthis.modules[i][8] = mod;\n\t\t} else if (i < 8) {\n\t\t\tthis.modules[i + 1][8] = mod;\n\t\t} else {\n\t\t\tthis.modules[this.moduleCount - 15 + i][8] = mod;\n\t\t}\n\t}\n\n\t// horizontal\n\tfor (var i = 0; i < 15; i++) {\n\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\t\t\n\t\tif (i < 8) {\n\t\t\tthis.modules[8][this.moduleCount - i - 1] = mod;\n\t\t} else if (i < 9) {\n\t\t\tthis.modules[8][15 - i - 1 + 1] = mod;\n\t\t} else {\n\t\t\tthis.modules[8][15 - i - 1] = mod;\n\t\t}\n\t}\n\n\t// fixed module\n\tthis.modules[this.moduleCount - 8][8] = (!test);\n};\n\nproto.mapData = function(data, maskPattern) {\n\t\n\tvar inc = -1;\n\tvar row = this.moduleCount - 1;\n\tvar bitIndex = 7;\n\tvar byteIndex = 0;\n\t\n\tfor (var col = this.moduleCount - 1; col > 0; col -= 2) {\n\n\t\tif (col == 6) col--;\n\n\t\twhile (true) {\n\n\t\t\tfor (var c = 0; c < 2; c++) {\n\t\t\t\t\n\t\t\t\tif (this.modules[row][col - c] == null) {\n\t\t\t\t\t\n\t\t\t\t\tvar dark = false;\n\n\t\t\t\t\tif (byteIndex < data.length) {\n\t\t\t\t\t\tdark = ( ( (data[byteIndex] >>> bitIndex) & 1) == 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar mask = util.getMask(maskPattern, row, col - c);\n\n\t\t\t\t\tif (mask) {\n\t\t\t\t\t\tdark = !dark;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.modules[row][col - c] = dark;\n\t\t\t\t\tbitIndex--;\n\n\t\t\t\t\tif (bitIndex == -1) {\n\t\t\t\t\t\tbyteIndex++;\n\t\t\t\t\t\tbitIndex = 7;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\trow += inc;\n\n\t\t\tif (row < 0 || this.moduleCount <= row) {\n\t\t\t\trow -= inc;\n\t\t\t\tinc = -inc;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n};\n\nQRCode$1.PAD0 = 0xEC;\nQRCode$1.PAD1 = 0x11;\n\nQRCode$1.createData = function(typeNumber, errorCorrectLevel, dataList) {\n\t\n\tvar rsBlocks = RSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n\t\n\tvar buffer = new BitBuffer();\n\t\n\tfor (var i = 0; i < dataList.length; i++) {\n\t\tvar data = dataList[i];\n\t\tbuffer.put(data.mode, 4);\n\t\tbuffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber) );\n\t\tdata.write(buffer);\n\t}\n\n\t// calc num max data.\n\tvar totalDataCount = 0;\n\tfor (var i = 0; i < rsBlocks.length; i++) {\n\t\ttotalDataCount += rsBlocks[i].dataCount;\n\t}\n\n\tif (buffer.getLengthInBits() > totalDataCount * 8) {\n\t\tthrow new Error(\"code length overflow. (\"\n\t\t\t+ buffer.getLengthInBits()\n\t\t\t+ \">\"\n\t\t\t+  totalDataCount * 8\n\t\t\t+ \")\");\n\t}\n\n\t// end code\n\tif (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n\t\tbuffer.put(0, 4);\n\t}\n\n\t// padding\n\twhile (buffer.getLengthInBits() % 8 != 0) {\n\t\tbuffer.putBit(false);\n\t}\n\n\t// padding\n\twhile (true) {\n\t\t\n\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\n\t\t\tbreak;\n\t\t}\n\t\tbuffer.put(QRCode$1.PAD0, 8);\n\t\t\n\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\n\t\t\tbreak;\n\t\t}\n\t\tbuffer.put(QRCode$1.PAD1, 8);\n\t}\n\n\treturn QRCode$1.createBytes(buffer, rsBlocks);\n};\n\nQRCode$1.createBytes = function(buffer, rsBlocks) {\n\n\tvar offset = 0;\n\t\n\tvar maxDcCount = 0;\n\tvar maxEcCount = 0;\n\t\n\tvar dcdata = new Array(rsBlocks.length);\n\tvar ecdata = new Array(rsBlocks.length);\n\t\n\tfor (var r = 0; r < rsBlocks.length; r++) {\n\n\t\tvar dcCount = rsBlocks[r].dataCount;\n\t\tvar ecCount = rsBlocks[r].totalCount - dcCount;\n\n\t\tmaxDcCount = Math.max(maxDcCount, dcCount);\n\t\tmaxEcCount = Math.max(maxEcCount, ecCount);\n\t\t\n\t\tdcdata[r] = new Array(dcCount);\n\t\t\n\t\tfor (var i = 0; i < dcdata[r].length; i++) {\n\t\t\tdcdata[r][i] = 0xff & buffer.buffer[i + offset];\n\t\t}\n\t\toffset += dcCount;\n\t\t\n\t\tvar rsPoly = util.getErrorCorrectPolynomial(ecCount);\n\t\tvar rawPoly = new Polynomial(dcdata[r], rsPoly.getLength() - 1);\n\n\t\tvar modPoly = rawPoly.mod(rsPoly);\n\t\tecdata[r] = new Array(rsPoly.getLength() - 1);\n\t\tfor (var i = 0; i < ecdata[r].length; i++) {\n            var modIndex = i + modPoly.getLength() - ecdata[r].length;\n\t\t\tecdata[r][i] = (modIndex >= 0)? modPoly.get(modIndex) : 0;\n\t\t}\n\n\t}\n\t\n\tvar totalCodeCount = 0;\n\tfor (var i = 0; i < rsBlocks.length; i++) {\n\t\ttotalCodeCount += rsBlocks[i].totalCount;\n\t}\n\n\tvar data = new Array(totalCodeCount);\n\tvar index = 0;\n\n\tfor (var i = 0; i < maxDcCount; i++) {\n\t\tfor (var r = 0; r < rsBlocks.length; r++) {\n\t\t\tif (i < dcdata[r].length) {\n\t\t\t\tdata[index++] = dcdata[r][i];\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (var i = 0; i < maxEcCount; i++) {\n\t\tfor (var r = 0; r < rsBlocks.length; r++) {\n\t\t\tif (i < ecdata[r].length) {\n\t\t\t\tdata[index++] = ecdata[r][i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn data;\n};\n\nvar QRCode_1 = QRCode$1;\n\nvar defaultErrorCorrectLevel = 'H';\r\n// Thanks the `qrcode.react`\r\nvar SUPPORTS_PATH2D = (function () {\r\n    try {\r\n        new Path2D().addPath(new Path2D());\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n    return true;\r\n})();\r\nfunction QRCode(data, level) {\r\n    var errorCorrectLevel = ErrorCorrectLevel[level];\r\n    // We'll use type===-1 to force QRCode to automatically pick the best type\r\n    var qrcode = new QRCode_1(-1, errorCorrectLevel);\r\n    qrcode.addData(toUTF8String(data));\r\n    qrcode.make();\r\n    return qrcode;\r\n}\r\nfunction validErrorCorrectLevel(level) {\r\n    return level in ErrorCorrectLevel;\r\n}\r\n/**\r\n * Encode UTF16 to UTF8.\r\n * See: http://jonisalonen.com/2012/from-utf-16-to-utf-8-in-javascript/\r\n * @param str {string}\r\n * @returns {string}\r\n */\r\nfunction toUTF8String(str) {\r\n    var utf8Str = '';\r\n    for (var i = 0; i < str.length; i++) {\r\n        var charCode = str.charCodeAt(i);\r\n        if (charCode < 0x0080) {\r\n            utf8Str += String.fromCharCode(charCode);\r\n        }\r\n        else if (charCode < 0x0800) {\r\n            utf8Str += String.fromCharCode(0xc0 | (charCode >> 6));\r\n            utf8Str += String.fromCharCode(0x80 | (charCode & 0x3f));\r\n        }\r\n        else if (charCode < 0xd800 || charCode >= 0xe000) {\r\n            utf8Str += String.fromCharCode(0xe0 | (charCode >> 12));\r\n            utf8Str += String.fromCharCode(0x80 | ((charCode >> 6) & 0x3f));\r\n            utf8Str += String.fromCharCode(0x80 | (charCode & 0x3f));\r\n        }\r\n        else {\r\n            // surrogate pair\r\n            i++;\r\n            // UTF-16 encodes 0x10000-0x10FFFF by\r\n            // subtracting 0x10000 and splitting the\r\n            // 20 bits of 0x0-0xFFFFF into two halves\r\n            charCode =\r\n                0x10000 + (((charCode & 0x3ff) << 10) | (str.charCodeAt(i) & 0x3ff));\r\n            utf8Str += String.fromCharCode(0xf0 | (charCode >> 18));\r\n            utf8Str += String.fromCharCode(0x80 | ((charCode >> 12) & 0x3f));\r\n            utf8Str += String.fromCharCode(0x80 | ((charCode >> 6) & 0x3f));\r\n            utf8Str += String.fromCharCode(0x80 | (charCode & 0x3f));\r\n        }\r\n    }\r\n    return utf8Str;\r\n}\r\nfunction generatePath(modules, margin) {\r\n    if (margin === void 0) { margin = 0; }\r\n    var ops = [];\r\n    modules.forEach(function (row, y) {\r\n        var start = null;\r\n        row.forEach(function (cell, x) {\r\n            if (!cell && start !== null) {\r\n                // M0 0h7v1H0z injects the space with the move and drops the comma,\r\n                // saving a char per operation\r\n                ops.push(\"M\" + (start + margin) + \" \" + (y + margin) + \"h\" + (x - start) + \"v1H\" + (start + margin) + \"z\");\r\n                start = null;\r\n                return;\r\n            }\r\n            // end of row, clean up or skip\r\n            if (x === row.length - 1) {\r\n                if (!cell) {\r\n                    // We would have closed the op above already so this can only mean\r\n                    // 2+ light modules in a row.\r\n                    return;\r\n                }\r\n                if (start === null) {\r\n                    // Just a single dark module.\r\n                    ops.push(\"M\" + (x + margin) + \",\" + (y + margin) + \" h1v1H\" + (x + margin) + \"z\");\r\n                }\r\n                else {\r\n                    // Otherwise finish the current line.\r\n                    ops.push(\"M\" + (start + margin) + \",\" + (y + margin) + \" h\" + (x + 1 - start) + \"v1H\" + (start + margin) + \"z\");\r\n                }\r\n                return;\r\n            }\r\n            if (cell && start === null) {\r\n                start = x;\r\n            }\r\n        });\r\n    });\r\n    return ops.join('');\r\n}\r\nvar QRCodeProps = {\r\n    value: {\r\n        type: String,\r\n        required: true,\r\n        \"default\": '',\r\n    },\r\n    size: {\r\n        type: Number,\r\n        \"default\": 100,\r\n    },\r\n    level: {\r\n        type: String,\r\n        \"default\": defaultErrorCorrectLevel,\r\n        validator: function (l) { return validErrorCorrectLevel(l); },\r\n    },\r\n    background: {\r\n        type: String,\r\n        \"default\": '#fff',\r\n    },\r\n    foreground: {\r\n        type: String,\r\n        \"default\": '#000',\r\n    },\r\n    margin: {\r\n        type: Number,\r\n        required: false,\r\n        \"default\": 0,\r\n    },\r\n};\r\nvar QRCodeVueProps = __assign(__assign({}, QRCodeProps), { renderAs: {\r\n        type: String,\r\n        required: false,\r\n        \"default\": 'canvas',\r\n        validator: function (as) { return ['canvas', 'svg'].indexOf(as) > -1; },\r\n    } });\r\nvar QRCodeSvg = defineComponent({\r\n    name: 'QRCodeSvg',\r\n    props: QRCodeProps,\r\n    setup: function (props) {\r\n        var numCells = ref(0);\r\n        var fgPath = ref('');\r\n        var generate = function () {\r\n            var value = props.value, level = props.level, margin = props.margin;\r\n            var cells = QRCode(value, level).modules;\r\n            numCells.value = cells.length + margin * 2;\r\n            // Drawing strategy: instead of a rect per module, we're going to create a\r\n            // single path for the dark modules and layer that on top of a light rect,\r\n            // for a total of 2 DOM nodes. We pay a bit more in string concat but that's\r\n            // way faster than DOM ops.\r\n            // For level 1, 441 nodes -> 2\r\n            // For level 40, 31329 -> 2\r\n            fgPath.value = generatePath(cells, margin);\r\n        };\r\n        generate();\r\n        onUpdated(generate);\r\n        return function () { return h('svg', {\r\n            width: props.size,\r\n            height: props.size,\r\n            'shape-rendering': \"crispEdges\",\r\n            xmlns: 'http://www.w3.org/2000/svg',\r\n            viewBox: \"0 0 \" + numCells.value + \" \" + numCells.value,\r\n        }, [\r\n            h('path', {\r\n                fill: props.background,\r\n                d: \"M0,0 h\" + numCells.value + \"v\" + numCells.value + \"H0z\",\r\n            }),\r\n            h('path', { fill: props.foreground, d: fgPath.value }),\r\n        ]); };\r\n    },\r\n});\r\nvar QRCodeCanvas = defineComponent({\r\n    name: 'QRCodeCanvas',\r\n    props: QRCodeProps,\r\n    setup: function (props) {\r\n        var canvasEl = ref(null);\r\n        var generate = function () {\r\n            var value = props.value, level = props.level, size = props.size, margin = props.margin, background = props.background, foreground = props.foreground;\r\n            var cells = QRCode(value, level).modules;\r\n            var numCells = cells.length + margin * 2;\r\n            var canvas = canvasEl.value;\r\n            if (!canvas) {\r\n                return;\r\n            }\r\n            var ctx = canvas.getContext('2d');\r\n            if (!ctx) {\r\n                return;\r\n            }\r\n            var devicePixelRatio = window.devicePixelRatio || 1;\r\n            var scale = (size / numCells) * devicePixelRatio;\r\n            canvas.height = canvas.width = size * devicePixelRatio;\r\n            ctx.scale(scale, scale);\r\n            ctx.fillStyle = background;\r\n            ctx.fillRect(0, 0, numCells, numCells);\r\n            ctx.fillStyle = foreground;\r\n            if (SUPPORTS_PATH2D) {\r\n                ctx.fill(new Path2D(generatePath(cells, margin)));\r\n            }\r\n            else {\r\n                cells.forEach(function (row, rdx) {\r\n                    row.forEach(function (cell, cdx) {\r\n                        if (cell) {\r\n                            ctx.fillRect(cdx + margin, rdx + margin, 1, 1);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        };\r\n        onMounted(generate);\r\n        onUpdated(generate);\r\n        return function () { return h('canvas', {\r\n            ref: canvasEl,\r\n            style: { width: props.size + \"px\", height: props.size + \"px\" },\r\n        }); };\r\n    },\r\n});\r\nvar QrcodeVue = defineComponent({\r\n    name: 'Qrcode',\r\n    render: function () {\r\n        var _a = this.$props, renderAs = _a.renderAs, value = _a.value, _size = _a.size, _margin = _a.margin, _level = _a.level, background = _a.background, foreground = _a.foreground;\r\n        var size = _size >>> 0;\r\n        var margin = _margin >>> 0;\r\n        var level = validErrorCorrectLevel(_level) ? _level : defaultErrorCorrectLevel;\r\n        return h(renderAs === 'svg' ? QRCodeSvg : QRCodeCanvas, { value: value, size: size, margin: margin, level: level, background: background, foreground: foreground });\r\n    },\r\n    props: QRCodeVueProps,\r\n});\n\nexport { QrcodeVue as default };\n"],
  "mappings": "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",
  "names": ["__assign", "mode"]
}
